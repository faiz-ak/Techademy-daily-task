package com.cts.exceptionhandling;
 
//Create CUSTOM Exception
 
public class InsufficientFundsException extends Exception
{
 
	private double amount;
	
	public InsufficientFundsException(double amount)
	{
		this.amount=amount;
	}
 
	public double getAmount() {
		return amount;
	}
	
	/*
	public String toString()
	{
		return +amount+" InsufficientFundException Occured !";
	}
	*/
}
 
 
package com.cts.exceptionhandling;
 
public class CheckingAccount {
 
 
	   private double balance;
	   private int number;
	   
	   public CheckingAccount(int accountNumber)
	   {
		   this.number=accountNumber;
	   }
	   
	   
 
	   public void deposit(double amount) {
	      balance += amount;
	   }
	   
	   public void withdraw(double amount) throws InsufficientFundsException {
	      if(amount <= balance) {
	         balance -= amount;   
	      }
	      else
	      {
	         double needs = amount - balance;
	      
	         throw new InsufficientFundsException(needs);
	      }
	   }
	   
	   
	   
	   public double getBalance() {
		   return balance;
	   }
	   public int getNumber() {
		   return number;
	   }
	   
	   
	   
}
 
 ackage com.cts.exceptionhandling;
 
public class BankAccount
{
 
	public static void main(String args[])
	{
		
	CheckingAccount c = new CheckingAccount(1101);
 
	      System.out.println("Depositing $500...");
 
	      c.deposit(500.00);
	      
	      try {
	         System.out.println("\nWithdrawing $100...");
	         c.withdraw(100.00);
	         System.out.println("\nWithdrawing $600...");
	         c.withdraw(600.00);
	      } catch (InsufficientFundsException e) {
	         System.err.println("Sorry, but you are short $" + e.getAmount());
	         
	      }
	   }
 
}